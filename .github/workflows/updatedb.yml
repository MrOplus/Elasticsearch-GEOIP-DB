name: updatedb

# on:
#   schedule:
#     - cron: '0 0 * * *'  # Runs every day at midnight UTC
on:
  workflow_dispatch:
    inputs:
      input:
        description: "manual"
        required: false
        default: "true"
jobs:
  download-upload:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Update DB
      env:
        LICENSE_KEY: ${{ secrets.LICENSE_KEY }}
      run: |
        cd ~/
        wget -O GeoLite2-ASN.tar.gz "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-ASN&license_key=$LICENSE_KEY&suffix=tar.gz"
        wget -O GeoLite2-City.tar.gz "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-City&license_key=$LICENSE_KEY&suffix=tar.gz"
        curl -fsSL https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo apt-key add -
        echo "deb https://artifacts.elastic.co/packages/7.x/apt stable main" | sudo tee -a /etc/apt/sources.list.d/elastic-7.x.list
        sudo apt update &&  sudo apt install elasticsearch -y
        mkdir ~/elastic
        tar -xvf GeoLite2-ASN.tar.gz
        tar -xvf GeoLite2-City.tar.gz
        find ~/ -name "*.mmdb" -exec cp "{}" /elastic  \; 
        ls -la ~/elastic
        cd ~/elastic
        sudo /usr/share/elasticsearch/bin/elasticsearch-geoip -s ~/elastic
        tar -cvf ~/filter_geo.tar .
        sha1sum ~/filter_geo.tar > ~/filter_geo.tar.sha1
        ls -la
        pwd
        

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: daily-release
        release_name: Daily Release
        body: Daily release with downloaded file

    - name: Upload Artifact
      id: upload-artifact
      uses: actions/upload-artifact@v3
      with:
        name: filter_geo
        path: |
          ~/filter_geo.tar
          ~/filter_geo.tar.sha1
        
